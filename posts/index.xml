<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Fábio Luciano</title><link>https://fabioluciano.dev/posts/</link><description>Recent content in Posts on Fábio Luciano</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Fábio Luciano</copyright><lastBuildDate>Tue, 13 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://fabioluciano.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Bom dia time! Como estamos?</title><link>https://fabioluciano.dev/posts/bom-dia-time-como-estamos/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>https://fabioluciano.dev/posts/bom-dia-time-como-estamos/</guid><description>Há algum tempo venho pensando em escrever sobre o assunto que traterei neste post. A verdade é que ele era para ter sido publicado no mês de setembro, para casar com as mensagens do Setembro Amarelo, mas eu ainda não conseguia escrever sobre. As ideias estavam na cabeça, mas a vontade de escrever não vinha. A verdade é que a ideia de escrever sobre isso veio há dois anos atrás, quando alguns eventos em minha vida profissional me fizeram questionar muitos aspectos sobre a responsabilidade da minha saúde mental.</description></item><item><title>Pipelines com o Tekton - Instalação</title><link>https://fabioluciano.dev/posts/tekton-instalation/</link><pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate><guid>https://fabioluciano.dev/posts/tekton-instalation/</guid><description>Deploy Cert Manager kubectl create ns cert-manager helm repo add jetstack https://charts.jetstack.io helm repo update helm install \ cert-manager jetstack/cert-manager \ -n cert-manager \ --version v1.1.0 \ --set installCRDs=true openssl genrsa -out ca.key 2048 openssl req -x509 -new -nodes -key ca.key -subj &amp;#34;/CN=integr8.me&amp;#34; -days 3650 -reqexts v3_req -extensions v3_ca -out ca.crt kubectl create secret tls integr8-ca-key-pair \ -n cert-manager \ --cert=ca.crt \ --key=ca.key \ apiVersion: cert-manager.io/v1 kind: ClusterIssuer metadata: name: integr8me namespace: sandbox spec: ca: secretName: integr8-ca-key-pair crlDistributionPoints: - &amp;#34;https://integr8.</description></item><item><title>Pipelines com o Tekton - Introdução</title><link>https://fabioluciano.dev/posts/tekton-introduction/</link><pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate><guid>https://fabioluciano.dev/posts/tekton-introduction/</guid><description>Tekton Características É um projeto Open Source mantido pela CNCF; Todas os elementos são objetos do Kubernetes; É focado em reutilização(TriggerBinding, TriggerTemplate, Pipeline, Task); Seu funcionamento se dá pela implementação de CRDs(Custom Resource Definition) customizados para cada um dos elementos descritos posteriormente. Ecossistema Tekton Triggers - Pacote com os CRDs referentes a escuta de eventos e como respondê-los; Tekton Pipelines - Pacote com os CRDs referentes a construção de tasks, recursos e elementos referentes a pipeline; Tekton Dashboard - Interface para consumir informações de execuções de pipelines; Tekton Hub - Coleção de tasks disponíveis para execução de determinadas tarefas; CLI Tool - Ferramenta de linha de comando para consumir informações e executar ações no ecossistema; Tekton Triggers EventListener - Elemento responsável por interceptar as requisições feitas ao endereço do Ingress; Trigger - Elemento responsável por configurar os gatilhos que ativarão determinadas TriggerTemplates; TriggerBinding - Permite a captura de informações de um evento, e transformação em um parâmetro consumível pela Pipeline; TriggerTemplate - Cria um template de invocação de algum elemento do pacote de pipelines.</description></item><item><title>Instalando o virtualbox 5.1 no ubuntu</title><link>https://fabioluciano.dev/posts/20170622-instalando-o-virtualbox-no-ubuntu/</link><pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate><guid>https://fabioluciano.dev/posts/20170622-instalando-o-virtualbox-no-ubuntu/</guid><description>Um dos maiores desafios atuais dos desenvolvedores é a implementação agnóstica aos ambientes disponíveis. Mas isso, infelizmente, nem sempre é a realidade, principalmente se você utiliza o Linux em seu desktop ou notebook, e necessita fazer testes em ambientes Windows. Para resolver tais problemas diversos são disponíveis, e grande parte delas envolvem tecnologias de virtualizações de ambientes. Dois são os aplicativos principais no mercado atualmente, o VMWare e o Virtualbox, e por motivos de sinergia entre as ferramentas disponíveis(Vagrant), utilizaremos o VirtualBox.</description></item><item><title>teste</title><link>https://fabioluciano.dev/posts/teste/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fabioluciano.dev/posts/teste/</guid><description>Sequence diagram Figure 1. Sequence diagram Activity diagrams (the new one) Figure 2. Activity diagram Documentation
Timing diagram Figure 3. Timing diagram Documentation
Gantt diagram Figure 4. Gantt diagram Documentation
Wireframe Figure 5. Wireframe example Ditaa Sprites diagram Figure 6. Diagram with Sprite Documentation
Following diagrams today require GraphViz’s dot binary, a possible alternative would be to use an abandoned port (3 years without update) of dot in Java, however not everything is supported, like arrows.</description></item></channel></rss>